type offerCategory @model {}

type storeCategory @model {}

type Offer @model {
  id: ID!
  title: String!

}

type Company @moedl {
  id: ID!

}
type Store @model {
  id: ID!
  company: Company!
}
type UserInfo @model {
  id: ID!
  joined: [Store!]!
  owned: [Store!]!
}

type Room @model {
  id: ID!
  invited: 
  joined: 
  createdAt: String
  updatedAt: String
  messages: [Message!]!
    @connection(name: "RoomMessages", keyField: "roomId", sortField: "createdAt")
}

type Message @model(subscriptions: null) {
  id: ID!
  content: String!
  when: String!
  roomId: ID!
  owner: String!
  createdAt: String
  updatedAt: String
  room: Room @connection(name: "RoomMessages", keyField: "roomId")
}

type Subscription {
  onCreateMessage(roomId: ID!): Message
    @aws_subscribe(mutations: ["createMessage"])
}
